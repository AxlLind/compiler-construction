Program(
  MainDecl(
    Identifier(Main#7):Main,
    [
    ],
    [
      If(
        MethodCall(
          New(
            Identifier(DrunkPirate#1):DrunkPirate
          ):DrunkPirate,
          Identifier(sing#2),
          [
          ]
        ):Boolean,
        Println(
          StringLit(Done!):String
        ):Unit
      ):Unit
    ]
  ),
  [
    ClassDecl(
      Identifier(DrunkPirate#1):DrunkPirate,
      [
      ],
      [
        MethodDecl(false,
          BooleanType(),
          Identifier(sing#2),
          [
          ],
          [
          ],
          [
            MethodCall(
              This():DrunkPirate,
              Identifier(verse#3),
              [
                IntLit(99):Int
              ]
            ):Int
          ],
          True():Boolean
        ),
        MethodDecl(false,
          IntType(),
          Identifier(verse#3),
          [
            Formal(
              IntType(),
              Identifier(number#4):Int
            )
          ],
          [
          ],
          [
            Println(
              Plus(
                Plus(
                  Plus(
                    MethodCall(
                      This():DrunkPirate,
                      Identifier(bottles#5),
                      [
                        Identifier(number#4):Int
                      ]
                    ):String,
                    StringLit( of beer on the wall, take one down, pass it around, ):String
                  ):String,
                  MethodCall(
                    This():DrunkPirate,
                    Identifier(bottles#5),
                    [
                      Minus(
                        Identifier(number#4):Int,
                        IntLit(1):Int
                      ):Int
                    ]
                  ):String
                ):String,
                StringLit( of beer on the wall.):String
              ):String
            ):Unit
          ],
          If(
            LessThan(
              IntLit(1):Int,
              Identifier(number#4):Int
            ):Boolean,
            Block(
              [
                MethodCall(
                  This():DrunkPirate,
                  Identifier(verse#3),
                  [
                    Minus(
                      Identifier(number#4):Int,
                      IntLit(1):Int
                    ):Int
                  ]
                ):Int
              ]
            ):Int,
            Block(
              [
                IntLit(0):Int
              ]
            ):Int
          ):Int
        ),
        MethodDecl(false,
          StringType(),
          Identifier(bottles#5),
          [
            Formal(
              IntType(),
              Identifier(number#6):Int
            )
          ],
          [
          ],
          [
          ],
          If(
            Equals(
              Identifier(number#6):Int,
              IntLit(0):Int
            ):Boolean,
            Block(
              [
                StringLit(no more bottles):String
              ]
            ):String,
            Block(
              [
                If(
                  Equals(
                    Identifier(number#6):Int,
                    IntLit(1):Int
                  ):Boolean,
                  StringLit(1 bottle):String,
                  Plus(
                    Identifier(number#6):Int,
                    StringLit( bottles):String
                  ):String
                ):String
              ]
            ):String
          ):String
        )
      ]
    )
  ])

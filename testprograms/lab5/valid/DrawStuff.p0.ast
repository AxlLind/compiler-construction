Program(
  MainDecl(
    Identifier(Main#51):Main,
    [
    ],
    [
      Block(
        [
          Println(
            MethodCall(
              New(
                Identifier(ConcentricCircles#2):ConcentricCircles
              ):ConcentricCircles,
              Identifier(render#7),
              [
              ]
            ):String
          ):Unit,
          Println(
            MethodCall(
              New(
                Identifier(Mandelbrot#3):Mandelbrot
              ):Mandelbrot,
              Identifier(render#7),
              [
              ]
            ):String
          ):Unit,
          Println(
            MethodCall(
              New(
                Identifier(Cross#4):Cross
              ):Cross,
              Identifier(render#7),
              [
              ]
            ):String
          ):Unit
        ]
      ):Unit
    ]
  ),
  [
    ClassDecl(
      Identifier(Drawable#1):Drawable,
      [
        VarDecl(
          IntType(),
          Identifier(resX#5):Int,
          IntLit(0):Int
        ),
        VarDecl(
          IntType(),
          Identifier(resY#6):Int,
          IntLit(0):Int
        )
      ],
      [
        MethodDecl(false,
          StringType(),
          Identifier(render#7),
          [
          ],
          [
            VarDecl(
              IntType(),
              Identifier(depth#8):Int,
              IntLit(0):Int
            ),
            VarDecl(
              StringType(),
              Identifier(screen#9):String,
              StringLit():String
            ),
            VarDecl(
              StringType(),
              Identifier(symb#10):String,
              StringLit():String
            ),
            VarDecl(
              IntType(),
              Identifier(x#11):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(y#12):Int,
              IntLit(0):Int
            )
          ],
          [
            Assign(
              Identifier(screen#9):String,
              StringLit():String
            ):Unit,
            Assign(
              Identifier(symb#10):String,
              StringLit(?):String
            ):Unit,
            Assign(
              Identifier(x#11):Int,
              IntLit(0):Int
            ):Unit,
            Assign(
              Identifier(y#12):Int,
              IntLit(0):Int
            ):Unit,
            Assign(
              Identifier(resX#5):Int,
              IntLit(66):Int
            ):Unit,
            Assign(
              Identifier(resY#6):Int,
              IntLit(31):Int
            ):Unit,
            While(
              LessThan(
                Identifier(y#12):Int,
                Identifier(resY#6):Int
              ):Boolean,
              Block(
                [
                  While(
                    LessThan(
                      Identifier(x#11):Int,
                      Identifier(resX#5):Int
                    ):Boolean,
                    Block(
                      [
                        Assign(
                          Identifier(depth#8):Int,
                          MethodCall(
                            This():Drawable,
                            Identifier(computePixel#13),
                            [
                              Identifier(x#11):Int,
                              Identifier(y#12):Int
                            ]
                          ):Int
                        ):Unit,
                        If(
                          LessThan(
                            Identifier(depth#8):Int,
                            IntLit(1):Int
                          ):Boolean,
                          Block(
                            [
                              Assign(
                                Identifier(symb#10):String,
                                StringLit( ):String
                              ):Unit
                            ]
                          ):Unit
                        ):Unit,
                        If(
                          Equals(
                            Identifier(depth#8):Int,
                            IntLit(1):Int
                          ):Boolean,
                          Block(
                            [
                              Assign(
                                Identifier(symb#10):String,
                                StringLit(.):String
                              ):Unit
                            ]
                          ):Unit
                        ):Unit,
                        If(
                          Equals(
                            Identifier(depth#8):Int,
                            IntLit(2):Int
                          ):Boolean,
                          Block(
                            [
                              Assign(
                                Identifier(symb#10):String,
                                StringLit(o):String
                              ):Unit
                            ]
                          ):Unit
                        ):Unit,
                        If(
                          Equals(
                            Identifier(depth#8):Int,
                            IntLit(3):Int
                          ):Boolean,
                          Block(
                            [
                              Assign(
                                Identifier(symb#10):String,
                                StringLit(O):String
                              ):Unit
                            ]
                          ):Unit
                        ):Unit,
                        If(
                          Equals(
                            Identifier(depth#8):Int,
                            IntLit(4):Int
                          ):Boolean,
                          Block(
                            [
                              Assign(
                                Identifier(symb#10):String,
                                StringLit(0):String
                              ):Unit
                            ]
                          ):Unit
                        ):Unit,
                        If(
                          Equals(
                            Identifier(depth#8):Int,
                            IntLit(5):Int
                          ):Boolean,
                          Block(
                            [
                              Assign(
                                Identifier(symb#10):String,
                                StringLit(@):String
                              ):Unit
                            ]
                          ):Unit
                        ):Unit,
                        If(
                          LessThan(
                            IntLit(5):Int,
                            Identifier(depth#8):Int
                          ):Boolean,
                          Block(
                            [
                              Assign(
                                Identifier(symb#10):String,
                                StringLit(#):String
                              ):Unit
                            ]
                          ):Unit
                        ):Unit,
                        Assign(
                          Identifier(screen#9):String,
                          Plus(
                            Identifier(screen#9):String,
                            Identifier(symb#10):String
                          ):String
                        ):Unit,
                        Assign(
                          Identifier(x#11):Int,
                          Plus(
                            Identifier(x#11):Int,
                            IntLit(1):Int
                          ):Int
                        ):Unit
                      ]
                    ):Unit
                  ):Unit,
                  Println(
                    Identifier(screen#9):String
                  ):Unit,
                  Assign(
                    Identifier(screen#9):String,
                    StringLit():String
                  ):Unit,
                  Assign(
                    Identifier(x#11):Int,
                    IntLit(0):Int
                  ):Unit,
                  Assign(
                    Identifier(y#12):Int,
                    Plus(
                      Identifier(y#12):Int,
                      IntLit(1):Int
                    ):Int
                  ):Unit
                ]
              ):Unit
            ):Unit,
            Println(
              StringLit():String
            ):Unit,
            Println(
              MethodCall(
                This():Drawable,
                Identifier(getDesc#16),
                [
                ]
              ):String
            ):Unit,
            Println(
              Plus(
                Plus(
                  Plus(
                    Plus(
                      StringLit(Resolution: ):String,
                      Identifier(resX#5):Int
                    ):String,
                    StringLit( by ):String
                  ):String,
                  Identifier(resY#6):Int
                ):String,
                StringLit( characters.):String
              ):String
            ):Unit,
            Println(
              StringLit():String
            ):Unit,
            Println(
              StringLit():String
            ):Unit,
            Println(
              StringLit():String
            ):Unit
          ],
          StringLit():String
        ),
        MethodDecl(false,
          IntType(),
          Identifier(computePixel#13),
          [
            Formal(
              IntType(),
              Identifier(x#14):Int
            ),
            Formal(
              IntType(),
              Identifier(y#15):Int
            )
          ],
          [
          ],
          [
          ],
          IntLit(0):Int
        ),
        MethodDecl(false,
          StringType(),
          Identifier(getDesc#16),
          [
          ],
          [
          ],
          [
          ],
          StringLit():String
        )
      ]
    ),
    ClassDecl(
      Identifier(ConcentricCircles#2):ConcentricCircles,
      [
      ],
      [
        MethodDecl(true,
          IntType(),
          Identifier(computePixel#17),
          [
            Formal(
              IntType(),
              Identifier(xIn#18):Int
            ),
            Formal(
              IntType(),
              Identifier(yIn#19):Int
            )
          ],
          [
            VarDecl(
              IntType(),
              Identifier(x#20):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(y#21):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(x0#22):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(y0#23):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(iter#24):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(maxIter#25):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(xTemp#26):Int,
              IntLit(0):Int
            )
          ],
          [
            Assign(
              Identifier(resX#5):Int,
              IntLit(65):Int
            ):Unit,
            Assign(
              Identifier(resY#6):Int,
              IntLit(30):Int
            ):Unit,
            Assign(
              Identifier(x0#22):Int,
              Minus(
                Times(
                  Identifier(xIn#18):Int,
                  IntLit(2500):Int
                ):Int,
                IntLit(15000):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(y0#23):Int,
              Minus(
                Times(
                  Identifier(yIn#19):Int,
                  IntLit(4500):Int
                ):Int,
                IntLit(15000):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(iter#24):Int,
              Minus(
                IntLit(0):Int,
                IntLit(1):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(maxIter#25):Int,
              IntLit(100):Int
            ):Unit,
            While(
              And(
                LessThan(
                  Plus(
                    Times(
                      Identifier(x#20):Int,
                      Identifier(x#20):Int
                    ):Int,
                    Times(
                      Identifier(y#21):Int,
                      Identifier(y#21):Int
                    ):Int
                  ):Int,
                  IntLit(100000000):Int
                ):Boolean,
                LessThan(
                  Identifier(iter#24):Int,
                  Identifier(maxIter#25):Int
                ):Boolean
              ):Boolean,
              Block(
                [
                  Assign(
                    Identifier(xTemp#26):Int,
                    Plus(
                      Identifier(x0#22):Int,
                      Identifier(x#20):Int
                    ):Int
                  ):Unit,
                  Assign(
                    Identifier(y#21):Int,
                    Plus(
                      Identifier(y0#23):Int,
                      Identifier(y#21):Int
                    ):Int
                  ):Unit,
                  Assign(
                    Identifier(x#20):Int,
                    Identifier(xTemp#26):Int
                  ):Unit,
                  Assign(
                    Identifier(iter#24):Int,
                    Plus(
                      Identifier(iter#24):Int,
                      IntLit(1):Int
                    ):Int
                  ):Unit
                ]
              ):Unit
            ):Unit
          ],
          Identifier(iter#24):Int
        ),
        MethodDecl(true,
          StringType(),
          Identifier(getDesc#27),
          [
          ],
          [
          ],
          [
          ],
          StringLit(Concentric circles, giving a representation of successive integer overflows.):String
        )
      ]
    ),
    ClassDecl(
      Identifier(Mandelbrot#3):Mandelbrot,
      [
      ],
      [
        MethodDecl(true,
          IntType(),
          Identifier(computePixel#28),
          [
            Formal(
              IntType(),
              Identifier(xIn#29):Int
            ),
            Formal(
              IntType(),
              Identifier(yIn#30):Int
            )
          ],
          [
            VarDecl(
              IntType(),
              Identifier(x#31):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(y#32):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(x0#33):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(y0#34):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(iter#35):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(maxIter#36):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(xTemp#37):Int,
              IntLit(0):Int
            )
          ],
          [
            Assign(
              Identifier(resX#5):Int,
              IntLit(70):Int
            ):Unit,
            Assign(
              Identifier(resY#6):Int,
              IntLit(40):Int
            ):Unit,
            Assign(
              Identifier(x0#33):Int,
              Minus(
                Div(
                  Minus(
                    Identifier(xIn#29):Int,
                    IntLit(25):Int
                  ):Int,
                  IntLit(5):Int
                ):Int,
                IntLit(1):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(y0#34):Int,
              Div(
                Minus(
                  Identifier(yIn#30):Int,
                  IntLit(15):Int
                ):Int,
                IntLit(3):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(iter#35):Int,
              Minus(
                IntLit(0):Int,
                IntLit(2):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(maxIter#36):Int,
              IntLit(1000):Int
            ):Unit,
            While(
              And(
                LessThan(
                  Plus(
                    Times(
                      Identifier(x#31):Int,
                      Identifier(x#31):Int
                    ):Int,
                    Times(
                      Identifier(y#32):Int,
                      Identifier(y#32):Int
                    ):Int
                  ):Int,
                  IntLit(50):Int
                ):Boolean,
                LessThan(
                  Identifier(iter#35):Int,
                  Identifier(maxIter#36):Int
                ):Boolean
              ):Boolean,
              Block(
                [
                  Assign(
                    Identifier(xTemp#37):Int,
                    Plus(
                      Minus(
                        Times(
                          Identifier(x#31):Int,
                          Identifier(x#31):Int
                        ):Int,
                        Times(
                          Identifier(y#32):Int,
                          Identifier(y#32):Int
                        ):Int
                      ):Int,
                      Identifier(x0#33):Int
                    ):Int
                  ):Unit,
                  Assign(
                    Identifier(y#32):Int,
                    Plus(
                      Times(
                        Times(
                          IntLit(2):Int,
                          Identifier(x#31):Int
                        ):Int,
                        Identifier(y#32):Int
                      ):Int,
                      Identifier(y0#34):Int
                    ):Int
                  ):Unit,
                  Assign(
                    Identifier(x#31):Int,
                    Identifier(xTemp#37):Int
                  ):Unit,
                  Assign(
                    Identifier(iter#35):Int,
                    Plus(
                      Identifier(iter#35):Int,
                      IntLit(1):Int
                    ):Int
                  ):Unit
                ]
              ):Unit
            ):Unit
          ],
          Identifier(iter#35):Int
        ),
        MethodDecl(true,
          StringType(),
          Identifier(getDesc#38),
          [
          ],
          [
          ],
          [
          ],
          StringLit(Representation of a Mandelbrot set (not so pretty due to rounding).):String
        )
      ]
    ),
    ClassDecl(
      Identifier(Cross#4):Cross,
      [
      ],
      [
        MethodDecl(true,
          IntType(),
          Identifier(computePixel#39),
          [
            Formal(
              IntType(),
              Identifier(xIn#40):Int
            ),
            Formal(
              IntType(),
              Identifier(yIn#41):Int
            )
          ],
          [
            VarDecl(
              IntType(),
              Identifier(x#42):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(y#43):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(x0#44):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(y0#45):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(iter#46):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(maxIter#47):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(xTemp#48):Int,
              IntLit(0):Int
            ),
            VarDecl(
              IntType(),
              Identifier(s#49):Int,
              IntLit(0):Int
            )
          ],
          [
            Assign(
              Identifier(s#49):Int,
              IntLit(13):Int
            ):Unit,
            Assign(
              Identifier(resX#5):Int,
              IntLit(50):Int
            ):Unit,
            Assign(
              Identifier(resY#6):Int,
              IntLit(30):Int
            ):Unit,
            Assign(
              Identifier(x0#44):Int,
              Minus(
                Div(
                  Times(
                    Times(
                      Identifier(xIn#40):Int,
                      IntLit(80):Int
                    ):Int,
                    Identifier(s#49):Int
                  ):Int,
                  Identifier(resX#5):Int
                ):Int,
                Times(
                  IntLit(40):Int,
                  Identifier(s#49):Int
                ):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(y0#45):Int,
              Minus(
                Div(
                  Times(
                    Times(
                      Identifier(yIn#41):Int,
                      IntLit(400):Int
                    ):Int,
                    Identifier(s#49):Int
                  ):Int,
                  Identifier(resY#6):Int
                ):Int,
                Times(
                  IntLit(200):Int,
                  Identifier(s#49):Int
                ):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(iter#46):Int,
              Minus(
                IntLit(0):Int,
                IntLit(2):Int
              ):Int
            ):Unit,
            Assign(
              Identifier(maxIter#47):Int,
              IntLit(10000):Int
            ):Unit,
            While(
              And(
                LessThan(
                  Minus(
                    Times(
                      Identifier(y#43):Int,
                      Identifier(y#43):Int
                    ):Int,
                    Times(
                      Identifier(x#42):Int,
                      Identifier(x#42):Int
                    ):Int
                  ):Int,
                  IntLit(10000):Int
                ):Boolean,
                LessThan(
                  Identifier(iter#46):Int,
                  Identifier(maxIter#47):Int
                ):Boolean
              ):Boolean,
              Block(
                [
                  Assign(
                    Identifier(xTemp#48):Int,
                    Div(
                      Plus(
                        Minus(
                          Times(
                            Identifier(x#42):Int,
                            Identifier(x#42):Int
                          ):Int,
                          Times(
                            Identifier(y#43):Int,
                            Identifier(y#43):Int
                          ):Int
                        ):Int,
                        Identifier(x0#44):Int
                      ):Int,
                      IntLit(10):Int
                    ):Int
                  ):Unit,
                  Assign(
                    Identifier(y#43):Int,
                    Div(
                      Plus(
                        Times(
                          Times(
                            Times(
                              IntLit(2):Int,
                              Identifier(x#42):Int
                            ):Int,
                            Identifier(y#43):Int
                          ):Int,
                          Identifier(x#42):Int
                        ):Int,
                        Identifier(y0#45):Int
                      ):Int,
                      IntLit(100):Int
                    ):Int
                  ):Unit,
                  Assign(
                    Identifier(x#42):Int,
                    Identifier(xTemp#48):Int
                  ):Unit,
                  Assign(
                    Identifier(iter#46):Int,
                    Plus(
                      Identifier(iter#46):Int,
                      IntLit(1):Int
                    ):Int
                  ):Unit
                ]
              ):Unit
            ):Unit
          ],
          Identifier(iter#46):Int
        ),
        MethodDecl(true,
          StringType(),
          Identifier(getDesc#50),
          [
          ],
          [
          ],
          [
          ],
          StringLit(Another cool pattern!):String
        )
      ]
    )
  ])
